{
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "bigData.categoryName": "빅데이터",
    "bigData.loadCSV": "[STORAGE]에 CSV 파일 담기",
    "bigData.missingValue": "[STORAGE]의 누락된 데이터를 [MISSINGVALUE](으)로 처리하기",
    "bigData.missingValue.zero": "(1) 0 값",
    "bigData.missingValue.mean": "(2) 중앙값",
    "bigData.missingValue.min": "(3) 최솟값",
    "bigData.missingValue.max": "(4) 최댓값",
    "bigData.missingValue.average": "(5) 평균값",
    "bigData.missingValue.delete": "(6) 삭제",
    "bigData.scale": "[STORAGE]을(를) [SCALINGTYPE] 하기",
    "bigData.scale.normalization": "(1) 정규화",
    "bigData.scale.standardization": "(2) 표준화",
    "bigData.autoLabelAtAll": "[STORAGE]의 전체 정보를 라벨링하기",
    "bigData.autoLabelAtIndex": "[STORAGE]의 [INDEX]번째 열을 라벨링하기",
    "bigData.getAllList": "[STORAGE] 리스트",
    "bigData.getRowList": "[STORAGE]의 [INDEX]번째 행 리스트",
    "bigData.getColumnList": "[STORAGE]의 [INDEX]번째 열 리스트",
    "bigData.getValue": "[STORAGE]의 [ROWINDEX]번째 행, [COLUMNINDEX]번째 열 값",
    "bigData.getHeaders": "[STORAGE]의 헤더",
    "bigData.getRowLength": "[STORAGE]의 행 개수",
    "bigData.getColumnLength": "[STORAGE]의 열 개수",
    "bigData.deleteHeader": "[STORAGE]의 헤더 삭제하기",
    "bigData.deleteRow": "[STORAGE]의 [INDEX]번째 행 삭제",
    "bigData.deleteColumn": "[STORAGE]의 [INDEX]번째 열 삭제",
    "bigData.remainRow": "[STORAGE]의 [INDEX]번째 행만 남기기",
    "bigData.remainColumn": "[STORAGE]의 [INDEX]번째 열만 남기기",
    "bigData.saveLocal": "[STORAGE]을(를) CSV 파일로 저장하기",
    "bigData.loadImage": "[STORAGE]에 이미지 담기",
    "bigData.resizeImage": "[STORAGE]이미지 크기를 가로 [WIDTH]세로 [HEIGHT]로 변환",
    "bigData.modifierGreyscale": "[STORAGE]이미지를 [AMOUNT]만큼 회색조로 변환",
    "bigData.getImageList": "[STORAGE]이미지 리스트",
    "bigData.getSizeImageLabel": "[STORAGE]라벨 개수",
    "bigData.saveImageLocal": "[STORAGE]라벨 [LABEL]의 [INDEX]번째 이미지를 파일로 저장하기",
    "bigData.showViewer": "[STORAGE]을(를) 시각화하기",
    "bigData.crawlingURL": "데이터 수집을 위한 주소 [CRAWLINGSITE]을(를) 설정",
    "bigData.crawlingLogin" : "로그인을 위한 아이디 [IDENTITY]와 비밀번호 [PASSWORD]을(를) 설정",
    "bigData.crawlingWord": "검색어 [WORD]을(를) 설정",
    "bigData.crawlingExecute": "[NUMBER]개만큼 크롤링 후, CSV 저장",
    "bigData.crawlingURL.melon": "(1) 멜론차트",
    "bigData.crawlingURL.instagram": "(2) 인스타그램",
    "bigData.crawlingURL.daum": "(3) 다음",
    "machineLearning.categoryName": "머신 러닝",
    "machineLearning.operatorAdd": "[A] + [B]",
    "machineLearning.operatorSub": "[A] - [B]",
    "machineLearning.operatorMul": "[A] x [B]",
    "machineLearning.operatorDiv": "[A] ÷ [B]",
    "machineLearning.operatorSum": "[X]의 총 합계",
    "machineLearning.operatorMean": "[X]의 평균",
    "machineLearning.getRowOfArrayAtIndex": "[ARRAY]리스트의 [INDEX]번째 행",
    "machineLearning.getMinMaxValueRowOfArrayAtIndex": "[ARRAY]리스트의 [INDEX]번째 행 [MINMAX]값 가져오기",
    "machineLearning.getRowSizeOfArray": "[ARRAY]리스트의 행 개수",
    "machineLearning.getColumnOfArrayAtIndex": "[ARRAY]리스트의 [INDEX]번째 열",
    "machineLearning.getColumnSizeOfArray": "[ARRAY]리스트의 열 개수",
    "machineLearning.createKNN": "[STORAGE]에 훈련값 X: [X_TRAIN]그리고 훈련값 Y: [Y_TRAIN]을(를) 사용하여 새로운 KNN 모델 생성하기",
    "machineLearning.predictKNN": "[STORAGE]모델을 사용하여 [X_TEST]예측하기",
    "machineLearning.getPredictKNN": "[STORAGE]모델의 예측된 값",
    "machineLearning.savePredictKNN": "[STORAGE]모델의 예측된 값을 CSV파일로 저장",
    "machineLearning.classifyKMeans": "[STORAGE]에 데이터 [DATA]그리고 그룹 크기 [GROUP_SIZE]을(를) 사용하여 분류한 K-Means 결과 저장하기",
    "machineLearning.getClassifyKMeans": "[STORAGE]에 저장된 분류된 값",
    "machineLearning.minmax.min": "(1) 최솟값",
    "machineLearning.minmax.max": "(2) 최댓값",
    "deepLearning.categoryName": "딥 러닝",
    "deepLearning.createModel": "[STORAGE]에 모델 생성",
    "deepLearning.setTrainData": "[STORAGE]에 훈련값 X: [X_TRAIN]및 Y: [Y_TRAIN]입력",
    "deepLearning.setTrainImageData": "[STORAGE]에 가로 [WIDTH]세로 [HEIGHT]채널 [CHANNEL]축 [AXIS]값을 가지는 훈련용 이미지 [DATA]입력",
    "deepLearning.setSequential": "[STORAGE]모델에 시퀀셜 추가",
    "deepLearning.addDense": "[STORAGE]시퀀셜에 입력 값 [INPUT_SHAPE]단위 [UNITS]편향값 [USE_BIAS]활성화 함수 [ACTIVATION]을(를) 갖는 계층 추가",
    "deepLearning.addDenseNoShape": "[STORAGE]시퀀셜에 단위 [UNITS]편향값 [USE_BIAS]활성화 함수 [ACTIVATION]을(를) 갖는 계층 추가",
    "deepLearning.addConv2d": "[STORAGE]시퀀셜에 입력 값 [INPUT_SHAPE]커널 사이즈 [KERNEL_SIZE]필터 [FILTERS]활성화 함수 [ACTIVATION]을(를) 갖는 합성곱 계층 추가",
    "deepLearning.addConv2dNoShape": "[STORAGE]시퀀셜에 커널 사이즈 [KERNEL_SIZE]필터 [FILTERS]활성화 함수 [ACTIVATION]을(를) 갖는 합성곱 계층 추가",
    "deepLearning.addMaxPooling2d": "[STORAGE]시퀀셜에 풀 사이즈 [POOL_SIZE]분할 크기 [STRIDES]을(를) 갖는 맥스풀링 계층 추가",
    "deepLearning.addFlatten": "[STORAGE]시퀀셜에 1차원 변환 계층 추가",
    "deepLearning.addDropout": "[STORAGE]시퀀셜에 [RATES]비율을 지니는 드롭아웃 계층 추가",
    "deepLearning.setLosses": "[STORAGE]의 손실 함수 [LOSSES]설정",
    "deepLearning.setOptimizer": "[STORAGE]의 학습률 [LEARNING_RATE]을 갖는 최적화 함수 [OPTIMIZER]설정",
    "deepLearning.trainModel": "[STORAGE]을(를) 단위 크기 [BATCH_SIZE]반복 횟수 [EPOCHS]무작위 여부 [SHUFFLE]로 설정하여 학습",
    "deepLearning.predict": "[STORAGE]을(를) 사용하여[X_TEST]예측하기",
    "deepLearning.classify": "[STORAGE]을(를) 사용하여 가로 [WIDTH]세로 [HEIGHT]채널 [CHANNEL]축 [AXIS]값을 가지는 이미지 [DATA]분류하기",
    "deepLearning.getPredict": "[STORAGE]의 예측된 값",
    "deepLearning.getClassify": "[STORAGE]의 분류된 값",
    "deepLearning.getClassificationAccuracy": "[STORAGE]의 분류 정확도",
    "deepLearning.savePredict": "[STORAGE]의 예측된 값을 CSV파일로 저장",
    "deepLearning.importModel": "[STORAGE](으)로 모델 가져오기",
    "deepLearning.exportModel": "[STORAGE]을(를) [FILE](으)로 내보내기",
    "deepLearning.showTrainHistoryOnViewer": "[STORAGE]의 학습 결과를 시각화하기",
    "deepLearning.activation.elu": "(1) Elu",
    "deepLearning.activation.hardSigmoid": "(2) Hard Sigmoid",
    "deepLearning.activation.linear": "(3) Linear",
    "deepLearning.activation.relu": "(4) Relu",
    "deepLearning.activation.relu6": "(5) Relu6",
    "deepLearning.activation.selu": "(6) Selu",
    "deepLearning.activation.sigmoid": "(7) Sigmoid",
    "deepLearning.activation.softmax": "(8) Softmax",
    "deepLearning.activation.softplus": "(9) Softplus",
    "deepLearning.activation.softsign": "(10) Softsign",
    "deepLearning.activation.tanh": "(11) Tanh",
    "deepLearning.optimizer.sgd": "(1) SGD",
    "deepLearning.optimizer.rmsprop": "(2) Rmsprop",
    "deepLearning.optimizer.momentum": "(3) Momentum",
    "deepLearning.optimizer.adamax": "(4) Ada Max",
    "deepLearning.optimizer.adam": "(5) Adam",
    "deepLearning.optimizer.adagrad": "(6) Ada Grad",
    "deepLearning.optimizer.adadelta": "(7) Ada Delta",
    "deepLearning.losses.absoluteDifference": "(1) Absolute Difference",
    "deepLearning.losses.computeWeightedLoss": "(2) Compute Weighted Loss",
    "deepLearning.losses.cosineDistance": "(3) Cosine Distance",
    "deepLearning.losses.hingeLoss": "(4) Hinge Loss",
    "deepLearning.losses.huberLoss": "(5) Huber Loss",
    "deepLearning.losses.logLoss": "(6) Log Loss",
    "deepLearning.losses.meanSquaredError": "(7) Mean Squared Error",
    "deepLearning.losses.sigmoidCrossEntropy": "(8) Sigmoid Cross Entropy",
    "deepLearning.losses.softmaxCrossEntropy": "(9) Softmax Cross Entropy",
    "deepLearning.losses.binaryCrossentropy": "(10) Binary Crossentropy",
    "deepLearning.losses.categoricalCrossentropy": "(11) Categorical Crossentropy",
    "deepLearning.losses.cosineProximity": "(12) Cosine Proximity",
    "deepLearning.losses.meanAbsoluteError": "(13) Mean Absolute Error",
    "deepLearning.losses.meanAbsolutePercentageError": "(14) Mean Absolute Percentage Error",
    "deepLearning.bias.active": "활성화",
    "deepLearning.bias.deactive": "비활성화",
    "deepLearning.shuffle.active": "활성화",
    "deepLearning.shuffle.deactive": "비활성화",
    "ev3.beepNote": "[TIME] 초 동안 [NOTE] 번 음 울리기",
    "ev3.buttonPressed": " [PORT] 번 버튼이 눌러졌는가?",
    "ev3.getBrightness": "밝기",
    "ev3.getDistance": "거리",
    "ev3.getMotorPosition": "모터 [PORT] 위치",
    "ev3.motorSetPower": "[PORT] 모터 강도를 [POWER] %로 정하기",
    "ev3.motorTurnClockwise": "[PORT] 모터를 [TIME] 초 동안 이쪽으로 돌리기",
    "ev3.motorTurnCounterClockwise": "[PORT] 모터를 [TIME] 초 동안 저쪽으로 돌리기",
    "ev3.whenBrightnessLessThan": "밝기 <  [DISTANCE]일 때",
    "ev3.whenButtonPressed": "[PORT] 번 버튼이 눌러졌을 때",
    "ev3.whenDistanceLessThan": "거리 < [DISTANCE]일 때",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "아래쪽",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "왼쪽",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "오른쪽",
    "makeymakey.spaceKey": "스페이스",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "위쪽",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microbit.buttonsMenu.any": "아무",
    "microbit.clearDisplay": "화면 지우기",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "[MATRIX] 보여주기",
    "microbit.displayText": "글자 [TEXT] 보여주기",
    "microbit.gesturesMenu.jumped": "점프하였을",
    "microbit.gesturesMenu.moved": "움직일",
    "microbit.gesturesMenu.shaken": "흔들어졌을",
    "microbit.isButtonPressed": "[BTN] 버튼이 눌려졌는가?",
    "microbit.isTilted": "[DIRECTION] 방향으로 기울어졌는가?",
    "microbit.pinStateMenu.off": "끄기",
    "microbit.pinStateMenu.on": "켜기",
    "microbit.tiltAngle": "[DIRECTION] 방향으로 기울어진 각도",
    "microbit.tiltDirectionMenu.any": "아무",
    "microbit.tiltDirectionMenu.back": "뒤쪽",
    "microbit.tiltDirectionMenu.front": "앞쪽",
    "microbit.tiltDirectionMenu.left": "왼쪽",
    "microbit.tiltDirectionMenu.right": "오른쪽",
    "microbit.whenButtonPressed": "[BTN] 버튼이 눌러졌을 때",
    "microbit.whenGesture": "[GESTURE] 때",
    "microbit.whenPinConnected": "[PIN]번 핀이 연결되었을 때",
    "microbit.whenTilted": "[DIRECTION] 방향으로 기울어졌을 때",
    "music.categoryName": "음악",
    "music.changeTempo": "빠르기를 [TEMPO] 만큼 바꾸기",
    "music.drumBass": "(2) 베이스 드럼",
    "music.drumBongo": "(13) 봉고",
    "music.drumCabasa": "(15) 카바사",
    "music.drumClaves": "(9) 클라베",
    "music.drumClosedHiHat": "(6) 닫힌 하이햇",
    "music.drumConga": "(14) 콩가",
    "music.drumCowbell": "(11) 카우벨 ",
    "music.drumCrashCymbal": "(4) 크래시 심벌",
    "music.drumCuica": "(18) 쿠이카 ",
    "music.drumGuiro": "(16) 귀로 ",
    "music.drumHandClap": "(8) 박수",
    "music.drumOpenHiHat": "(5) 열린 하이햇",
    "music.drumSideStick": "(3) 사이드 스틱",
    "music.drumSnare": "(1) 스네어 드럼 ",
    "music.drumTambourine": "(7) 탬버린",
    "music.drumTriangle": "(12) 트라이앵글 ",
    "music.drumVibraslap": "(17) 비브라슬랩 ",
    "music.drumWoodBlock": "(10) 나무 블록",
    "music.getTempo": "빠르기",
    "music.instrumentBass": "(6) 베이스",
    "music.instrumentBassoon": "(14) 바순",
    "music.instrumentCello": "(8) 첼로 ",
    "music.instrumentChoir": "(15) 합창단 ",
    "music.instrumentClarinet": "(10) 클라리넷 ",
    "music.instrumentElectricGuitar": "(5) 전자 기타 ",
    "music.instrumentElectricPiano": "(2) 전자 피아노 ",
    "music.instrumentFlute": "(12) 플루트 ",
    "music.instrumentGuitar": "(4) 기타",
    "music.instrumentMarimba": "(19) 마림바 ",
    "music.instrumentMusicBox": "(17) 뮤직 박스",
    "music.instrumentOrgan": "(3) 오르간",
    "music.instrumentPiano": "(1) 피아노",
    "music.instrumentPizzicato": "(7) 피치카토 ",
    "music.instrumentSaxophone": "(11) 색소폰 ",
    "music.instrumentSteelDrum": "(18) 스틸 드럼 ",
    "music.instrumentSynthLead": "(20) 신드 리드",
    "music.instrumentSynthPad": "(21) 신드 패드 ",
    "music.instrumentTrombone": "(9) 트럼본",
    "music.instrumentVibraphone": "(16) 비브라폰",
    "music.instrumentWoodenFlute": "(13) 나무 플루트 ",
    "music.midiPlayDrumForBeats": "[DRUM]번 타악기를 [BEATS] 박자로 연주하기",
    "music.midiSetInstrument": "악기를 [INSTRUMENT](으)로 정하기",
    "music.playDrumForBeats": "[DRUM]번 타악기를 [BEATS] 박자로 연주하기",
    "music.playNoteForBeats": "[NOTE]번 음을 [BEATS] 박자로 연주하기",
    "music.restForBeats": "[BEATS] 박자 쉬기 ",
    "music.setInstrument": "악기를 [INSTRUMENT](으)로 정하기",
    "music.setTempo": "빠르기를 [TEMPO](으)로 정하기",
    "pen.categoryName": "펜",
    "pen.changeColorParam": "펜 [COLOR_PARAM]을(를) [VALUE]만큼 바꾸기",
    "pen.changeHue": "펜 색깔을 [HUE]만큼 바꾸기",
    "pen.changeShade": "펜 명암을 [SHADE] 만큼 바꾸기 ",
    "pen.changeSize": "펜 굵기를 [SIZE] 만큼 바꾸기",
    "pen.clear": "모두 지우기",
    "pen.colorMenu.brightness": "명도",
    "pen.colorMenu.color": "색깔",
    "pen.colorMenu.saturation": "채도 ",
    "pen.colorMenu.transparency": "투명도",
    "pen.penDown": "펜 내리기",
    "pen.penUp": "펜 올리기",
    "pen.setColor": "펜 색깔을 [COLOR](으)로 정하기 ",
    "pen.setColorParam": "펜 [COLOR_PARAM]을(를) [VALUE](으)로 정하기",
    "pen.setHue": "펜 색깔을 [HUE](으)로 정하기",
    "pen.setShade": "펜 명암을 [SHADE](으)로 정하기 ",
    "pen.setSize": "펜 굵기를 [SIZE](으)로 정하기",
    "pen.stamp": "도장찍기",
    "speech.defaultWhenIHearValue": "시작합시다",
    "speech.extensionName": "음성 인식",
    "speech.listenAndWait": "듣고 기다리기",
    "speech.speechReporter": "인식된 말",
    "speech.whenIHear": "[PHRASE] 이(가) 들릴 때",
    "text2speech.alto": "중고음",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "안녕 ",
    "text2speech.giant": "저음",
    "text2speech.kitten": "고양이",
    "text2speech.setLanguageBlock": "언어를 [LANGUAGE]로 정하기",
    "text2speech.setVoiceBlock": "음성을 [VOICE]로 정하기",
    "text2speech.speakAndWaitBlock": "[WORDS] 말하기",
    "text2speech.squeak": "고음",
    "text2speech.tenor": "중저음",
    "translate.categoryName": "번역",
    "translate.defaultTextToTranslate": "안녕 ",
    "translate.translateBlock": "[WORDS]을(를) [LANGUAGE]로 번역하기",
    "translate.viewerLanguage": "언어",
    "videoSensing.categoryName": "비디오 감지",
    "videoSensing.direction": "방향",
    "videoSensing.motion": "동작",
    "videoSensing.off": "끄기",
    "videoSensing.on": "켜기",
    "videoSensing.onFlipped": "뒤집힌 상태로 켜기",
    "videoSensing.setVideoTransparency": "비디오 투명도를 [TRANSPARENCY] (으)로 정하기",
    "videoSensing.sprite": "스프라이트",
    "videoSensing.stage": "무대 ",
    "videoSensing.videoOn": "비디오 [ATTRIBUTE]에 대한 [SUBJECT]에서의 관찰값",
    "videoSensing.videoToggle": "비디오 [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "비디오 동작 > [REFERENCE]일 때 ",
    "wedo2.getDistance": "거리",
    "wedo2.getTiltAngle": "[TILT_DIRECTION] 방향으로 기울어진 각도",
    "wedo2.isTilted": "[TILT_DIRECTION_ANY] 방향으로 기울어졌는가?",
    "wedo2.motorDirection.backward": "저쪽",
    "wedo2.motorDirection.forward": "이쪽",
    "wedo2.motorDirection.reverse": "반대쪽",
    "wedo2.motorId.a": "모터 A",
    "wedo2.motorId.all": "모든 모터",
    "wedo2.motorId.b": "모터 B",
    "wedo2.motorId.default": "모터",
    "wedo2.motorOff": "[MOTOR_ID] 끄기",
    "wedo2.motorOn": "[MOTOR_ID] 켜기",
    "wedo2.motorOnFor": "[DURATION] 초 동안 [MOTOR_ID] 켜기",
    "wedo2.playNoteFor": "[NOTE] 번 음을 [DURATION]초 간 연주하기",
    "wedo2.setLightHue": "빛의 색을  [HUE]로 정하기",
    "wedo2.setMotorDirection": "[MOTOR_ID]의 방향을 [MOTOR_DIRECTION]으로 정하기",
    "wedo2.startMotorPower": "[MOTOR_ID] 모터 강도를 [POWER]로 정하기",
    "wedo2.tiltDirection.any": "아무",
    "wedo2.tiltDirection.down": "아래쪽",
    "wedo2.tiltDirection.left": "왼쪽",
    "wedo2.tiltDirection.right": "오른쪽",
    "wedo2.tiltDirection.up": "위쪽",
    "wedo2.whenDistance": "거리 [OP] [REFERENCE] 일 때",
    "wedo2.whenTilted": "[TILT_DIRECTION_ANY] 방향으로 기울일 때"
}